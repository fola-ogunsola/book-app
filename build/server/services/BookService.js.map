{"version":3,"sources":["../../../api/server/services/BookService.js"],"names":["BookService","database","Book","findAll","newBook","create","id","updateBook","findOne","where","Number","bookToUpdate","update","theBook","bookToDelete","destroy","deletedBook"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;IAEMA,W;;;;;;;;uGACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEiBC,mBAASC,IAAT,CAAcC,OAAd,EAFjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;mGAQA,kBAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEiBH,mBAASC,IAAT,CAAcG,MAAd,CAAqBD,OAArB,CAFjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;uGAQA,kBAAwBE,EAAxB,EAA4BC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAE+BN,mBAASC,IAAT,CAAcM,OAAd,CAAsB;AAC/CC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AADwC,iBAAtB,CAF/B;;AAAA;AAEUK,gBAAAA,YAFV;;AAAA,qBAMQA,YANR;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAOYV,mBAASC,IAAT,CAAcU,MAAd,CAAqBL,WAArB,EAAiC;AAAEE,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAAT,iBAAjC,CAPZ;;AAAA;AAAA,kDASaC,WATb;;AAAA;AAAA,kDAWW,IAXX;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;oGAiBA,kBAAsBD,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAE0BL,mBAASC,IAAT,CAAcM,OAAd,CAAsB;AAC1CC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AADmC,iBAAtB,CAF1B;;AAAA;AAEUO,gBAAAA,OAFV;AAAA,kDAMWA,OANX;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;sGAYA,kBAAwBP,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAE+BL,mBAASC,IAAT,CAAcM,OAAd,CAAsB;AAAEC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAAT,iBAAtB,CAF/B;;AAAA;AAEUQ,gBAAAA,YAFV;;AAAA,qBAIQA,YAJR;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAKgCb,mBAASC,IAAT,CAAca,OAAd,CAAsB;AAC9CN,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AADuC,iBAAtB,CALhC;;AAAA;AAKYU,gBAAAA,WALZ;AAAA,kDAQaA,WARb;;AAAA;AAAA,kDAUW,IAVX;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;eAiBahB,W","sourcesContent":["import database from '../src/models';\n\nclass BookService {\n  static async getAllBooks() {\n    try {\n      return await database.Book.findAll();\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async addBook(newBook) {\n    try {\n      return await database.Book.create(newBook);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async updateBook(id, updateBook) {\n    try {\n      const bookToUpdate = await database.Book.findOne({\n        where: { id: Number(id) }\n      });\n\n      if (bookToUpdate) {\n        await database.Book.update(updateBook, { where: { id: Number(id) } });\n\n        return updateBook;\n      }\n      return null;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async getABook(id) {\n    try {\n      const theBook = await database.Book.findOne({\n        where: { id: Number(id) }\n      });\n\n      return theBook;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async deleteBook(id) {\n    try {\n      const bookToDelete = await database.Book.findOne({ where: { id: Number(id) } });\n\n      if (bookToDelete) {\n        const deletedBook = await database.Book.destroy({\n          where: { id: Number(id) }\n        });\n        return deletedBook;\n      }\n      return null;\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\nexport default BookService;"],"file":"BookService.js"}